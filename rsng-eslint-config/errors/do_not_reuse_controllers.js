
//Объявляйте контроллер только для одного представления и не пытайтесь переиспользовать его для других. Выносите общую логику в сервисы, фабрики и оставляйте контроллер максимально простым и сфокусированным на его представлении
//Контроллер ни в коем случае не должен знать ничего о DOM составляющей представления, никаких манипуляций над разметкой, это прерогатива директив
//Фабрики
//Single Responsibility. Фабрики должны соблюдать принцип единственной ответственности. Как только фабрика начинает превышать свое предназначение, следует создать еще одну фабрику
//Помещайте доступные методы/свойства наверх. Это очень удобно для чтения
// 26/36

//Пример
/* avoid */
function dataService1() {
    var someValue = '';
    function save() {
        /* */
    };
    function validate() {
        /* */
    };
    return {
        save: save,
        someValue: someValue,
        validate: validate
    };
}
//хорошо
function dataService2() {
    var someValue = '';
    var service = {
        save: save,
        someValue: someValue,
        validate: validate
    };
    return service;
    ////////////
    function save() {
        /* */
    };
    function validate() {
        /* */
    };
}
